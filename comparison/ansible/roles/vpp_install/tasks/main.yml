---
- name: find the controller host address
  set_fact:
    host_0_address: "{{hostvars[groups['all'][0]].ansible_bond0.ipv4.address}}"

- name: Add packagecloud gpg key
  apt_key:
    url: https://packagecloud.io/fdio/{{vpp_ver}}/gpgkey
    state: present
  when: ansible_os_family == "Debian"

- name: setup vpp repo for RedHat
  template:
    src: fdio.repo
    dest: /etc/yum.repos.d/fdio.repo
  when: ansible_os_family == "RedHat"
  register: vpp_sh_rh

#- name: get VPP install script for RedHat
#  get_url:
#    url: https://packagecloud.io/install/repositories/fdio/release/script.rpm.sh
#    dest: /root/vpp.sh
#    mode: 0755
#  when: ansible_os_family == "RedHat"
#  register: vpp_sh_rh


- name: setup vpp repo for Ubuntu
  template:
    src: 99fd.io.list
    dest: /etc/apt/sources.list.d/99fd.io.list
  when: ansible_os_family == "Debian"
  register: vpp_sh_deb

#- name: get VPP install script for Ubuntu
#  get_url:
#    url: https://packagecloud.io/install/repositories/fdio/release/script.deb.sh
#    dest: /root/vpp.sh
#    mode: 0755
#  when: ansible_os_family == "Debian"
#  register: vpp_sh_deb

#- name: run VPP install script
#  command: /root/vpp.sh
#  when: vpp_sh_rh.changed or vpp_sh_deb.changed
#
- name: install dpdk on RedHat
  yum:
    name: ['libibverbs','dpdk']
  when: ansible_os_family == "RedHat"

- name: update apt cache
  apt:
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: install dpdk on Debian
  apt:
    update_cache: yes
    name: ['libibverbs-dev','dpdk']
  when: ansible_os_family == "Debian"

- name: install vpp service(s) RedHat
  yum:
    name: ["vpp","vpp-plugins","vpp-devel"]
  when: ansible_os_family == "RedHat"

- name: install vpp service(s) Ubuntu
  apt:
    update_cache: yes
    name: ['vpp','vpp-dev','vpp-dbg','libvppinfra', 'vpp-plugin-core', 'vpp-plugin-dpdk']
  when: ansible_os_family == "Debian"

- name: install vpp api packages(s) RedHat
  yum:
    name: ["vpp-api-python","vpp-api-lua","vpp-api-java"]
  when: ansible_os_family == "RedHat"

- name: install vpp api packages(s) Ubuntu
  apt:
    update_cache: yes
    name: ["vpp-api-python","vpp-api-java"]
  when: ansible_os_family == "Debian"

- name: Enable use of vfio-pci driver
  replace:
    path: /lib/systemd/system/vpp.service
    regexp: 'uio_pci_generic'
    replace: 'vfio-pci'
    backup: no
  when: ansible_os_family == "Debian"


- name: add uplink vpp tap startup script
  template:
    src: uplink.conf
    dest: /etc/vpp/uplink.conf
  # when: inventory_hostname == host_0_address

- name: update vpp startup script for l3
  template:
    src: startupl3.conf
    dest: /etc/vpp/startup.conf
  # when: inventory_hostname == host_0_address

# - name: update vpp startup script compute
#   template:
#     src: startup.conf
#     dest: /etc/vpp/startup.conf
#   when: not inventory_hostname == host_0_address

- name: Create perfmon tar bundle
  command: tar Jxf PerfmonTables.tar.xz
  args:
   chdir: /usr/share/vpp/plugins/perfmon
  ignore_errors: true

- name: Restart VPP service
  systemd:
    name: vpp
    state: restarted
    daemon_reload: yes
  when: ansible_os_family == "Debian"
