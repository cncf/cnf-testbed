# Dev info for working on the CNF testbed 

### Build the tools

_Build packet api util_
```
docker build -t ubuntu:packet_api ../../tools/packet_api/ .
```

_Build tool container_
```
docker build -t cnfdeploytools:latest  ../../tools/deploy/
```

### Openstack deploy

*Deploying Openstack to reserved Equinix Metal machines (currently all Intel)*

Follow common steps [here](./steps_to_deploy_testbed.mkd#common-steps)

Then do the following:

1. Create a env file and source it

2. Create servers and ignore terraform error about json
```
PROVISION_ONLY=true ./deploy_openstack_cluster.sh
```

3. Manually update comparison/ansible/inventory with the IPs for the new servers as seen in the [Equinix Metal Console](http://console.equinix.com/)

4. Re-run provisioning to finish setting up servers and vlan
```
PROVISION_ONLY=true ./deploy_openstack_cluster.sh
```

5. deploy openstack and setup vpp vswitch
```SKIP_PROVISIONING=true ./deploy_openstack_cluster.sh```



### Using the ansible playbooks directly from the tool container

Steps to build and use provisioning tools when in comparison/kubecon18-chained_nf_test

_Get a shell in the tool container_
Prereqs:
- Equinix Metal API token
- SSH key with access to target servers

Run the tools container and cd into the /ansible directory
```
docker run -e PACKET_API_TOKEN=YOUR_API_KEY -v $(pwd)/../ansible:/ansible -v ~/.ssh/id_rsa:/root/.ssh/id_rsa --entrypoint /bin/bash -ti cnfdeploytools:latest
cd /ansible
```

Example usage:
*provision*
```
ansible-playbook -i "147.75.39.241," packet_generator.yml -e server_list=quadtestb-09 -e deploy_env=test09 -e quad_intel=true
```

*delete layer-2 resources*
```
ansible-playbook -i "147.75.39.241," packet_generator.yml -e server_list=quadtestb-09 -e deploy_env=test09 -e quad_intel=true -e teardown_layer2=true -e skip_provisioning=true
```

*Provision with the quad intel packet generator playbook *
```
ansible-playbook -i "147.75.39.241," packet_generator_quad_intel.yml -e server_list=quadtestb-03 -e deploy_env=questtesb03 -e quad_intel=true
```


### Playing with Equinix Metal
Looking at device assignment and other goodies from the API:

```
curl -X GET --header 'Accept: application/json' --header 'X-Auth-Token: YOUR_API_KEY' 'https://api.packet.net/devices/YOUR_SERVER_GUID' | jq '.'
```


## Deploy multi-chain pipeline CNFs on K8s

Point towards k8s deployment 'kubeconfig' file:
```export KUBECONFIG=/path/to/kubeconfig/```

Go to CNF /helm/ directory:
```comparison/kubecon18-chained_nf_test/CNF/k8s/helm```

### Automated deployment through script

Start (or clean) CNFs:
```
./run_csp.sh <chains> <chain length> [clean]
     (or to clean: ./run_csp.sh clean
```

### Manual steps for validation purposes

Generate single CNF:
```./config_csp.sh 1 1 1 6 8,36```

Deploy CNF:
```helm install --name cnf_single ./vedge/```

Remove CNF:
```helm del --purge cnf_single```
